// Generated by view binder compiler. Do not edit!
package com.smhrd.gmore.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.smhrd.gmore.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemFavoriteBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView tvCategoryBoardId;

  @NonNull
  public final TextView tvCategoryLikeCnt;

  @NonNull
  public final TextView tvCategoryNick;

  @NonNull
  public final TextView tvDateCreated;

  @NonNull
  public final TextView tvFavoriteTitle;

  private ItemFavoriteBinding(@NonNull LinearLayout rootView, @NonNull TextView tvCategoryBoardId,
      @NonNull TextView tvCategoryLikeCnt, @NonNull TextView tvCategoryNick,
      @NonNull TextView tvDateCreated, @NonNull TextView tvFavoriteTitle) {
    this.rootView = rootView;
    this.tvCategoryBoardId = tvCategoryBoardId;
    this.tvCategoryLikeCnt = tvCategoryLikeCnt;
    this.tvCategoryNick = tvCategoryNick;
    this.tvDateCreated = tvDateCreated;
    this.tvFavoriteTitle = tvFavoriteTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemFavoriteBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemFavoriteBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_favorite, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemFavoriteBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.tv_category_board_id;
      TextView tvCategoryBoardId = ViewBindings.findChildViewById(rootView, id);
      if (tvCategoryBoardId == null) {
        break missingId;
      }

      id = R.id.tv_category_like_cnt;
      TextView tvCategoryLikeCnt = ViewBindings.findChildViewById(rootView, id);
      if (tvCategoryLikeCnt == null) {
        break missingId;
      }

      id = R.id.tv_category_nick;
      TextView tvCategoryNick = ViewBindings.findChildViewById(rootView, id);
      if (tvCategoryNick == null) {
        break missingId;
      }

      id = R.id.tv_date_created;
      TextView tvDateCreated = ViewBindings.findChildViewById(rootView, id);
      if (tvDateCreated == null) {
        break missingId;
      }

      id = R.id.tv_favorite_title;
      TextView tvFavoriteTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvFavoriteTitle == null) {
        break missingId;
      }

      return new ItemFavoriteBinding((LinearLayout) rootView, tvCategoryBoardId, tvCategoryLikeCnt,
          tvCategoryNick, tvDateCreated, tvFavoriteTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
